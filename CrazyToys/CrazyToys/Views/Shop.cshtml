@using CrazyToys.Entities.DTOs
@using CrazyToys.Entities.Entities
@using CrazyToys.Entities.SolrModels
@using CrazyToys.Web;
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Shop>
@{
    Layout = "Master.cshtml";
    var categories = ViewData["Categories"] as SortedDictionary<string, int>;
    var brands = ViewData["Brands"] as SortedDictionary<string, int>;
    var ageGroups = ViewData["AgeGroups"] as List<AgeGroup>;
    var colourGroups = ViewData["ColourGroups"] as List<ColourGroup>;
    var priceGroups = ViewData["PriceGroups"] as List<PriceGroup>;
    var shopToyDTOs = ViewData["ShopToyDTOs"] as List<ShopToyDTO>;
    var categoryList = ViewData["CategoryList"] as List<Category>;
    var numFound = (int)ViewData["NumFound"];
    var pageNumber = (int)ViewData["PageNumber"];
    var tempDict = ViewData["TempDict"] as Dictionary<string, HashSet<string>>;

    var paramsDict = @Html.Raw(ViewData["ParamsDict"]); // http://localhost:44325/shop?brands=_brand.Barbie"
    int numberOfPages = (numFound + 30 - 1) / 30;
}

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Butik</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Forside</a>
                        <span>Butik</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->
<!-- Shop Section Begin -->
<section class="shop spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <div class="shop__sidebar">
                    <div class="shop__sidebar__search">
                        <form action="#">
                            <input type="text" placeholder="Søg...">
                            <button type="submit"><span class="icon_search"></span></button>
                        </form>
                    </div>
                    <div class="shop__sidebar__accordion">
                        <div class="accordion" id="accordionExample">
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseOne">Kategorier</a>
                                </div>
                                <div id="collapseOne" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__categories">
                                            <ul class="list-height">
                                                @{
                                                    foreach (var category in categoryList)
                                                    {
                                                        <li>
                                                            <a class="@(tempDict.Count > 0 && tempDict.ContainsKey("categories") && tempDict["categories"].Contains(category.Name)
                                                            ? "active-filter"
                                                            : "")" aria-expanded="true" data-toggle="collapse" data-target="#@category.Name" href="javascript:void(0);" onclick='updateDictAndCreateUrl(@paramsDict, "categories", "@category.Name", )'>@category.Name</a>

                                                            <div class="@(tempDict.Count > 0 && tempDict.ContainsKey("categories") && tempDict["categories"].Contains(category.Name)
                                                            ? ""
                                                            : "collapse")" id="@category.Name">
                                                                <ul class="list-height">
                                                                    @foreach (var subCategory in category.SubCategories)
                                                                    {
                                                                        <li>
                                                                            <a class="@(tempDict.Count > 0 && tempDict.ContainsKey("subCategory") && tempDict["subCategory"].Contains(subCategory.Name)
                                                                            ? "active-filter"
                                                                            : "") nav-link py-0" href="javascript:void(0);" onclick='updateDictAndCreateUrl(@paramsDict, "subCategory", "@subCategory.Name", )'>@subCategory.Name</a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseTwo">Mærker</a>
                                </div>
                                <div id="collapseTwo" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__brand">
                                            <ul id="ulBrand">
                                                @{
                                                    foreach (KeyValuePair<string, int> brand in brands)
                                                    {
                                                        <li>
                                                            <a class="@(tempDict.Count > 0 && tempDict.ContainsKey("brand") && tempDict["brand"].Contains(brand.Key)
                                                        ? "active-filter"
                                                        : "")" href="javascript:void(0);" onclick='updateDictAndCreateUrl(@paramsDict, "brand", "@brand.Key")'>@brand.Key (@brand.Value)</a>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseThree">Filtrer Pris</a>
                                </div>
                                <div id="collapseThree" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__price">
                                            <ul>
                                                @{
                                                    foreach (PriceGroup priceGroup in priceGroups)
                                                    {
                                                        <li>
                                                            <a class="@(tempDict.Count > 0 && tempDict.ContainsKey("priceGroup") && tempDict["priceGroup"].Contains(priceGroup.Interval)
                                                            ? "active-filter"
                                                            : "")" href="javascript:void(0);" onclick='updateDictAndCreateUrl(@paramsDict, "priceGroup", "@priceGroup.Interval")'>@priceGroup.Interval DKK</a>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseFour">Aldersgruppe</a>
                                </div>
                                <div id="collapseFour" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__size">
                                            @{
                                                foreach (AgeGroup ageGroup in ageGroups)
                                                {
                                                    <a class="@(tempDict.Count > 0 && tempDict.ContainsKey("ageGroupIntervals") && tempDict["ageGroupIntervals"].Contains(ageGroup.Interval)
                                                    ? "age-group-active"
                                                    : "") age-group hover" href="javascript:void(0);" onclick='updateDictAndCreateUrl(@paramsDict, "ageGroupIntervals", "@ageGroup.Interval")'> @ageGroup.Interval </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseFive">Farver</a>
                                </div>
                                <div id="collapseFive" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__color">
                                            @{
                                                foreach (ColourGroup colourGroup in colourGroups)
                                                {
                                                    <a class="@(tempDict.Count > 0 && tempDict.ContainsKey("colours") && tempDict["colours"].Contains(colourGroup.Name)
                                                    ? "colour-group-filter-active"
                                                    : "") colour-group-filter" href="javascript:void(0);" onclick='updateDictAndCreateUrl(@paramsDict, "colours", "@colourGroup.Name")' style="background: @colourGroup.ColourCode"></a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="shop__product__option">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="shop__product__option__left">
                                @{
                                    if (numFound > 0)
                                    {
                                        int start = pageNumber * 30 - 30 + 1;

                                        int end = pageNumber == numberOfPages
                                        ? numFound
                                        : start + 29;

                                        <p>Viser @start-@end af @numFound resultater</p>
                                    }
                                }
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="shop__product__option__right">
                                <p>Sorter efter pris:</p>
                                <select id="sorter" onchange='createUrlFromParams(@pageNumber, @paramsDict)'>
                                    <option value="sort=price_asc">Lav til Høj</option>
                                    <option value="sort=price_desc">Høj til Lav</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    @{
                        for (int j = 0; j < shopToyDTOs.Count; j++)//shopToyDTOs.Count > 29 ? 30 : shopToyDTOs.Count); j++)
                        {
                            <div class="col-lg-4 col-md-6 col-sm-6">
                                <div class="product__item">
                                    <div class="product__item__pic set-bg" data-setbg="@(shopToyDTOs[j].ImageUrl ?? shopToyDTOs[j].Name)">
                                        <a class="item-link" href="/shop-details?id=@shopToyDTOs[j].Id"></a>

                                        <ul class="product__hover">
                                            <li><a href="#"><img src="img/icon/search.png" alt=""></a></li>
                                            <li><a href="#"><img src="img/icon/heart.png" alt=""></a></li>
                                        </ul>
                                    </div>
                                    <div class="product__item__text">
                                        <h6>@shopToyDTOs[j].Name</h6>
                                        <a href="#" class="add-cart">+ Add To Cart</a>
                                        <h5>@shopToyDTOs[j].Price DKK</h5>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="product__pagination">
                            @{
                                if (numFound > 0)
                                {
                                    HashSet<int> pagesToShow = new HashSet<int>();

                                    pagesToShow.Add(1);
                                    pagesToShow.Add(numberOfPages);
                                    pagesToShow.Add(pageNumber);
                                    pagesToShow.Add(pageNumber + 1);
                                    pagesToShow.Add(pageNumber + 2);
                                    pagesToShow.Add(pageNumber - 1);
                                    pagesToShow.Add(pageNumber - 2);

                                    if (pageNumber - 3 == 2)
                                    {
                                        pagesToShow.Add(2);
                                    }

                                    if (numberOfPages - 4 == pageNumber)
                                    {
                                        pagesToShow.Add(numberOfPages - 1);
                                    }

                                    int surroundingNumbersStart = pageNumber - 2;
                                    int surroundingNumbersEnd = pageNumber + 2;

                                    // skal der være dotter før eller efter?
                                    bool addDotsBefore = surroundingNumbersStart > 3; // hvis vi vil have at den ikke viser et enkelt tal som ... >=
                                    bool dotsAddedBefore = false;
                                    bool addDotsAfter = numberOfPages - 2 > surroundingNumbersEnd; // hvis vi vil have at den ikke viser et enkelt tal som ... >=
                                    bool dotsAddedAfter = false;

                                    for (int i = 1; i <= numberOfPages; i++)
                                    {
                                        // hvis vi står på denne side: tilføj class="active", så man kan se det
                                        if (pageNumber == i)
                                        {
                                            <a id="activePage" class="active" href="javascript:void(0);" onclick='createUrlFromParams(@i, @paramsDict)'>@i</a>
                                        }
                                        else if (pagesToShow.Contains(i))
                                        {
                                            <a href="javascript:void(0);" onclick='createUrlFromParams(@i, @paramsDict)'>@i</a>
                                        }
                                        else // så skal der tilføjes dutter
                                        {
                                            if (addDotsBefore && !dotsAddedBefore && i < surroundingNumbersStart)
                                            {
                                                <a>...</a>
                                                dotsAddedBefore = true;
                                            }
                                            else if (addDotsAfter && !dotsAddedAfter && i > surroundingNumbersEnd)
                                            {
                                                <a>...</a>
                                                dotsAddedAfter = true;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    <div>Der er ikke noget legetøj der matcher søgekriterierne ØV BØØØØØØØØØØØV</div>
                                }

                                /*
                                <a class="active" href="#">1</a>
                                <a href="#">2</a>
                                <a href="#">3</a>
                                <span>...</span>
                                <a href="#">21</a>
                                */
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shop Section End -->
